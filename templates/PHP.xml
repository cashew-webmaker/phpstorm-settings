<templateSet group="PHP">
  <template name="migrateforeign" value="            $table-&gt;integer('$user_id$')-&gt;unsigned()-&gt;index()-&gt;nullable()-&gt;default(null);&#10;            $table-&gt;foreign('$user_id$')-&gt;references('id')-&gt;on('$users$')&#10;                -&gt;onUpdate('cascade')-&gt;onDelete('restrict');" description="Migration for foreign keys" toReformat="true" toShortenFQNames="true">
    <variable name="user_id" expression="" defaultValue="&quot;user_id&quot;" alwaysStopAt="true" />
    <variable name="users" expression="" defaultValue="&quot;users&quot;" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="migratedecimal" value="$table-&gt;$TYPE$('$NAME$',$DIGITS$,$DECIMALS$)-&gt;nullable()-&gt;default(null);" description="Migrate float numbers" toReformat="true" toShortenFQNames="true">
    <variable name="TYPE" expression="" defaultValue="&quot;decimal&quot;" alwaysStopAt="true" />
    <variable name="NAME" expression="" defaultValue="&quot;quantity&quot;" alwaysStopAt="true" />
    <variable name="DIGITS" expression="" defaultValue="&quot;10&quot;" alwaysStopAt="true" />
    <variable name="DECIMALS" expression="" defaultValue="&quot;3&quot;" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="controllerupdate" value="/**&#10; * Update the specified resource in storage.&#10; *&#10; */&#10;public function update(Request $request, $id)&#10;{&#10;    $input = $request-&gt;all();&#10;&#10;    $item$ = $Item$::find($id);&#10;&#10;    $item$-&gt;update($input);&#10;&#10;    return redirect()-&gt;route('$items$.index')-&gt;with('success','update successful');&#10;}" description="Update Method for controllers" toReformat="false" toShortenFQNames="true">
    <variable name="item" expression="" defaultValue="&quot;$customer&quot;" alwaysStopAt="true" />
    <variable name="Item" expression="" defaultValue="&quot;Customer&quot;" alwaysStopAt="true" />
    <variable name="items" expression="" defaultValue="&quot;customers&quot;" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="controllershow" value="/**&#10; * Show the Item&#10; */&#10;public function show($id)&#10;{&#10;    $itemVar$ = $Item$::find($id);&#10;&#10;    return view('$item$s.show', compact('$item$'));&#10;}" description="Show Method for controllers" toReformat="false" toShortenFQNames="true">
    <variable name="itemVar" expression="" defaultValue="&quot;$customer&quot;" alwaysStopAt="true" />
    <variable name="item" expression="" defaultValue="&quot;customers&quot;" alwaysStopAt="true" />
    <variable name="Item" expression="capitalize(String)" defaultValue="&quot;Customer&quot;" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="migratestring" value="$table-&gt;$TYPE$('$NAME$',$LENGTH$)-&gt;nullable()-&gt;default(null);" description="Migrate String" toReformat="false" toShortenFQNames="true">
    <variable name="TYPE" expression="" defaultValue="&quot;string&quot;" alwaysStopAt="true" />
    <variable name="NAME" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <variable name="LENGTH" expression="" defaultValue="&quot;255&quot;" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="migratebool" value="$table-&gt;$TYPE$('$NAME$')-&gt;nullable()-&gt;default(null);" description="migrate boolean" toReformat="false" toShortenFQNames="true">
    <variable name="TYPE" expression="" defaultValue="&quot;boolean&quot;" alwaysStopAt="true" />
    <variable name="NAME" expression="" defaultValue="&quot;active&quot;" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="migratedate" value="$table-&gt;$TYPE$('$NAME$')-&gt;nullable()-&gt;default(null);" description="Migrate Date" toReformat="false" toShortenFQNames="true">
    <variable name="TYPE" expression="" defaultValue="&quot;date&quot;" alwaysStopAt="true" />
    <variable name="NAME" expression="" defaultValue="&quot;some_date&quot;" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="migratetime" value="$table-&gt;$TYPE$('$NAME$')-&gt;nullable()-&gt;default(null);" description="Migrate DateTime" toReformat="false" toShortenFQNames="true">
    <variable name="TYPE" expression="" defaultValue="&quot;dateTime&quot;" alwaysStopAt="true" />
    <variable name="NAME" expression="" defaultValue="&quot;some_time&quot;" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="dropboxdownload" value="$path = $file-&gt;path;&#10;&#10;$downloadUrl = (new DropboxCustom())-&gt;getAndDelete($path);&#10;&#10;return response()-&gt;download($downloadUrl);" description="Download from Dropbox and auto-delete" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="migrateinteger" value="$table-&gt;$TYPE$('$NAME$')-&gt;nullable()-&gt;default(null);" description="Migrate Integer" toReformat="false" toShortenFQNames="true">
    <variable name="TYPE" expression="" defaultValue="&quot;integer&quot;" alwaysStopAt="true" />
    <variable name="NAME" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <context>
      <option name="HTML" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="PutFileAs Upload" value="/** Handle Files */&#10;foreach ($input['attachments'] as $attachment) {&#10;    $fileName = $attachment-&gt;getClientOriginalName();&#10;    $mimeType = $attachment-&gt;getClientMimeType();&#10;&#10;    $folder = &quot;/internalMemo/files-$internalMemo-&gt;id&quot;;&#10;    \Storage::disk('dropbox')-&gt;putFileAs($folder, $input['file'],$fileName);&#10;    $path = &quot;$folder/$fileName&quot;;&#10;&#10;    InternalMemoFile::create([&#10;        'internal_memo_id' =&gt; $internalMemo-&gt;id,&#10;        'mime_type' =&gt; $mimeType,&#10;        'path' =&gt; $path,&#10;    ]);&#10;}" description="Upload Files using PutFileAs" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="updateInput" value=" =&gt; $input['$field$'] ?? $model$-&gt;$field$" description="Update Input" toReformat="false" toShortenFQNames="true">
    <variable name="field" expression="" defaultValue="&quot;field&quot;" alwaysStopAt="true" />
    <variable name="model" expression="" defaultValue="&quot;user&quot;" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="createInput" value=" =&gt; $input['$field$']" description="Laravel create based on input" toReformat="false" toShortenFQNames="true">
    <variable name="field" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="validateInputLaravel" value=" =&gt; 'required'" description="Laravel validate Input" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="revisionsEntrust" value="use RevisionableTrait;&#10;protected $revisionCreationsEnabled = true;" description="Using Zizaco Entrust on Laravel Models" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="pivotRecordHistory" value="/** Tracking PivotHistory */&#10;$currentRecords = collect();&#10;foreach ($apparel-&gt;inventories as $size) {&#10;    $currentRecords-&gt;push($size-&gt;pivot);&#10;}&#10;$apparel-&gt;inventories()-&gt;sync($sizes);&#10;$newRecords = collect();&#10;$apparel = (new Apparel())-&gt;find($id); // Have to get new instance&#10;foreach ($apparel-&gt;inventories as $size) {&#10;    $newRecords-&gt;push($size-&gt;pivot);&#10;}&#10;(new PivotTracking($apparel-&gt;inventories(), $currentRecords, $newRecords))-&gt;recordHistory();" description="Record Pivot History" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="uploadFilesToDropbox" value="/** Handle Files */&#10;if (!empty($input['attachments'])) {&#10;    foreach ($input['attachments'] as $attachment) {&#10;        $fileName = $attachment-&gt;getClientOriginalName();&#10;        $mimeType = $attachment-&gt;getClientMimeType();&#10;&#10;        $folder = &quot;/internalMemo/files-$internalMemo-&gt;id&quot;;&#10;        \Storage::disk('dropbox')-&gt;putFileAs($folder, $attachment,$fileName);&#10;        $path = &quot;$folder/$fileName&quot;;&#10;&#10;        InternalMemoFile::create([&#10;            'internal_memo_id' =&gt; $internalMemo-&gt;id,&#10;            'name' =&gt; $fileName,&#10;            'mime_type' =&gt; $mimeType,&#10;            'path' =&gt; $path,&#10;        ]);&#10;    }&#10;}" description="Laravel upload Files to dropbox" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="carbonFormat" value="Carbon::now()-&gt;format('l, j F, Y')" description="Carbon Nice Format" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
</templateSet>