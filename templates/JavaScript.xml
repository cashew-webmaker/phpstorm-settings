<templateSet group="JavaScript">
  <template name="datepicker" value="$(&quot;.datepicker&quot;).datepicker({&#10;    format: 'yyyy-mm-dd',&#10;    todayHighlight: true,&#10;    autoclose: true,&#10;});" description="Datepicker" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="select2" value="$(&quot;.sel2&quot;).select2({&#10;    ajax: {&#10;        url: &quot;{{route('ajax.inventoryName')}}&quot;,&#10;        dataType: 'json',&#10;        delay: 250,&#10;        data: function (params) {&#10;            return {&#10;                q: params.term || &quot;&quot;,&#10;                page: params.page || 1&#10;            };&#10;        },&#10;        cache: true&#10;    },&#10;    width : '100%'&#10;});" description="Adding a Select2" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="dynamicFormTable" value="    $(document).ready(function(){&#10;        $(&quot;.inventory-select2&quot;).select2({&#10;            ajax: {&#10;                url: &quot;{{route('ajax.inventoryName')}}&quot;,&#10;                dataType: 'json',&#10;                delay: 250,&#10;                data: function (params) {&#10;                    return {&#10;                        q: params.term || &quot;&quot;,&#10;                        page: params.page || 1&#10;                    };&#10;                },&#10;                cache: true&#10;            },&#10;            width : '100%',&#10;            placeholder: 'Choose Options'&#10;        });&#10;&#10;        $(&quot;.location-select2&quot;).select2({&#10;            width : '100%'&#10;        });&#10;&#10;&#10;&#10;        $(&quot;#inventory_id0&quot;).change(function () {&#10;            var $inv_id = $(this).val();&#10;&#10;            $.ajax({&#10;                //we cannot use route() here since we cannot pass in the id!!!&#10;                url: &quot;/inv/&quot;+$inv_id,&#10;                data: &quot;not used&quot;,&#10;                dataType: &quot;json&quot;,&#10;                success: function ($data) {&#10;                    $(&quot;#inventory_code0&quot;).val($data.product_code);&#10;                    $(&quot;#unit0&quot;).val($data.unit);&#10;                },&#10;            });&#10;        });&#10;&#10;&#10;        $(&quot;#add_row&quot;).click(function () {&#10;&#10;&#10;            /** APPENDING NEW ROWS */&#10;&#10;            // get the last DIV which ID starts with ^= &quot;klon&quot;&#10;            var $tr = $('tr[id^=&quot;addr&quot;]:last');&#10;&#10;            //Un-instrument original row's select2&#10;            $tr.find('.sel2').select2('destroy');&#10;&#10;            // Read the Number from that DIV's ID (i.e: 3 from &quot;klon3&quot;)&#10;            // And increment that number by 1&#10;            var $num = parseInt( $tr.prop(&quot;id&quot;).match(/\d+/g), 10 ) +1;&#10;&#10;            // Clone it and assign the new ID (i.e: from num 4 to ID &quot;klon4&quot;)&#10;            var $row = $tr.clone().prop('id', 'addr'+$num );&#10;&#10;            //Change the prefix of the id and the name&#10;            $row.find('td').each(function(){&#10;                var $el = $(this).find(':first-child');&#10;                var $id = $el.attr('name') || null;&#10;                if($id) {&#10;                    var $i = $id.substr($id.length-1);&#10;                    var $prefix = $id.substr(0, ($id.length-1));&#10;                    $el.attr('id', $prefix+(+$i+1));&#10;                    $el.attr('name', $prefix+(+$i+1));&#10;                }&#10;            });&#10;&#10;            // &gt;&gt;&gt; Append $row wherever you want&#10;            $row.appendTo(&quot;#dynamic_form_table&quot;);&#10;&#10;            /** Re-instrument SELECT 2 */&#10;&#10;            $(&quot;.inventory-select2&quot;).select2({&#10;                ajax: {&#10;                    url: &quot;{{route('ajax.inventoryName')}}&quot;,&#10;                    dataType: 'json',&#10;                    delay: 250,&#10;                    data: function (params) {&#10;                        return {&#10;                            q: params.term || &quot;&quot;,&#10;                            page: params.page || 1&#10;                        };&#10;                    },&#10;                    cache: true&#10;                },&#10;                width : '100%'&#10;            });&#10;&#10;            $(&quot;.location-select2&quot;).select2({&#10;                width : '100%'&#10;            });&#10;&#10;&#10;            /** Auto-populating fields */&#10;&#10;            $(&quot;#inventory_id&quot;+$num).change(function () {&#10;                var $inv_id = $(this).val();&#10;&#10;                $.ajax({&#10;                    //we cannot use route() here since we cannot pass in the id!!!&#10;                    url: &quot;/inv/&quot;+$inv_id,&#10;                    data: &quot;not used&quot;,&#10;                    dataType: &quot;json&quot;,&#10;                    success: function ($data) {&#10;                        $(&quot;#inventory_code&quot;+$num).val($data.product_code);&#10;                        $(&quot;#unit&quot;+$num).val($data.unit);&#10;&#10;                    },&#10;                });&#10;            });&#10;&#10;&#10;&#10;            /**CHANGING THE ROW NUMBERS*/&#10;&#10;            $('#dynamic_form_table tbody tr').each(function(idx){&#10;                $(this).children(&quot;:eq(0)&quot;).html(idx + 1);&#10;            });&#10;&#10;            /** ADDING DATE PICKER */&#10;            $(&quot;.datepicker&quot;).datepicker({&#10;                format: 'yyyy-mm-dd',&#10;                todayHighlight: true,&#10;                autoclose: true,&#10;            });&#10;&#10;    });&#10;&#10;        /** DELETING LAST TD ROWS */&#10;        $(&quot;#delete_row&quot;).click(function(){&#10;            $('#dynamic_form_table tr:last').remove();&#10;        });&#10;&#10;        $(&quot;.datepicker&quot;).datepicker({&#10;            format: 'yyyy-mm-dd',&#10;            todayHighlight: true,&#10;            autoclose: true,&#10;        });&#10;&#10;&#10;    });" description="Adding a Dynamic Form Table" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="datatable-insert" value="// Setup - add a text input to each footer cell&#10;$('#inventory-adjustment-table tfoot th').each( function () {&#10;    var title = $(this).text();&#10;    $(this).html( '&lt;input type=&quot;text&quot; placeholder=&quot;Search '+title+'&quot; /&gt;' );&#10;} );&#10;&#10;&#10;// Eager loading relationships, call the column names using relation.name, not table.column&#10;&#10;var table = $('#inventory-adjustment-table').DataTable({&#10;    &quot;processing&quot;: true,&#10;    serverSide: true,&#10;    deferRender: true,&#10;    ajax: '{!! route('datatables.inventoryAdjustments') !!}',&#10;    columns: [&#10;        { data: 'inventory_adjustment.date', name: 'inventory_adjustment.date' },&#10;        { data: 'inventory_adjustment.inventory_adjustment_form_no', name: 'inventory_adjustment.inventory_adjustment_form_no' },&#10;        { data: 'inventory.name', name: 'inventory.name' },&#10;        { data: 'bin.name', name: 'bin.name' },&#10;        { data: 'inventory.unit', name: 'inventory.unit' },&#10;        { data: 'change', name: 'change' },&#10;        { data: 'inventory_adjustment.reason', name: 'inventory_adjustment.reason' },&#10;        { data: 'notes', name: 'notes' },&#10;        { data: 'inventory_adjustment.user.name', name: 'inventory_adjustment.user.name',orderable: false, searchable: false },&#10;        { data: 'action', name: 'action', orderable: false, searchable: false}&#10;    ],&#10;    lengthMenu: [[10,25,50,100, -1], [10,25,50, 100, &quot;All&quot;]],&#10;    pageLength: 10,&#10;    dom: 'Bflrtip',&#10;    buttons: [&#10;        'copy','csv','pdf','print'&#10;    ],&#10;});" description="Insert a datatable with Norman's options" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cdn-datatable" value="&lt;script src=&quot;https://cdn.datatables.net/v/dt/pdfmake-0.1.18/dt-1.10.12/af-2.1.2/b-1.2.2/b-colvis-1.2.2/b-html5-1.2.2/b-print-1.2.2/datatables.min.js&quot;&gt;&lt;/script&gt;&#10;" description="CDN for datatables" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="simpleMarkdownEditor" value="{{--Simple Markdown Editor--}}&#10;&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/simplemde.min.css&quot;&gt;&#10;&lt;script src=&quot;/js/PageLevel/simplemde.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;script&gt;&#10;    var simplemde = new SimpleMDE({&#10;        element: $(&quot;#notes&quot;)[0],&#10;        spellChecker: false&#10;    });&#10;&lt;/script&gt;" description="SimpleMDE loader" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="DataTable Setup" value="&lt;script src=&quot;/js/PageLevel/datatables.min.js&quot;&gt;&lt;/script&gt;&#10;&lt;script&gt;&#10;    // Setup tfoot in the table first if you want to do footer search&#10;    $('.table').DataTable();&#10;&lt;/script&gt;" description="Datatable Setup" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="AJAX Async Update" value="&lt;tr&gt;&#10;    &lt;td contenteditable=&quot;true&quot;&#10;        onblur=&quot;update(this,'body','{{$progress-&gt;id}}',&#10;                '{{route(&quot;myProgressPlanProblems.update&quot;,$progress-&gt;id)}}')&quot;&#10;    &gt;{{$progress-&gt;body}}&lt;/td&gt;&#10;&lt;/tr&gt;&#10;{{-- Ajax Auto Update Asynchronously --}}&#10;&lt;script&gt;&#10;    function update(editableObject,field,id,url) {&#10;&#10;        /** Data to send over */&#10;        var dataSend = {&#10;            id: id,&#10;            _token: &quot;{{csrf_token()}}&quot;&#10;        };&#10;        /** Using variable to set array key */&#10;        dataSend[field] = $(editableObject).text();&#10;&#10;        $.ajax({&#10;            url: url,&#10;            method: &quot;PUT&quot;,&#10;            data: dataSend,&#10;            success: function(success) {&#10;                $('#ajaxResponse').text('Update Saved Successfully!');&#10;                $(&quot;#ajaxResponseDiv&quot;).show().delay(5000).fadeOut();&#10;            },&#10;        });&#10;    }&#10;&lt;/script&gt;" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML" value="true" />
      <option name="JAVA_SCRIPT" value="true" />
      <option name="PHP" value="true" />
    </context>
  </template>
</templateSet>